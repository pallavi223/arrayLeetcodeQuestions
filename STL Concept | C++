#include <array>
using namespace std;


1. Array in sTL: 

int main()
{
    array<int,4>arr = {1,2,3,4}; //initialise array
    int n = arr.size();
    
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
        cout<<endl;
    cout<<"find element at :"<<arr.at(2)<<endl; //return present element at index 2
    cout<<"find front element at array: "<<arr.front()<<endl;
     cout<<"find last element at array: "<<arr.back()<<endl;
     cout<<"empty an array:"<<arr.empty()<<endl;   //check if array empty or not return true or false
    
}


2. Vector in sTL: 

#include <iostream>
#include <vector>
using namespace std;
int main() {
  vector<int> v ;
   cout<<"size of vector: "<<v.size()<<endl;
  cout<<"capacity:"<<v.capacity()<<endl;
  v.push_back(1);
  cout<<"size of vector: "<<v.size()<<endl;
  cout<<"capacity:"<<v.capacity()<<endl;
  v.push_back(2);
  cout<<"capacity:"<<v.capacity()<<endl;
  v.push_back(3);
  cout<<"size of vector: "<<v.size()<<endl;
  cout<<"capacity:"<<v.capacity();
  cout<<"find elment:"<<v.at(2)<<endl;
   cout<<"first elment:"<<v.front()<<endl;
   cout<<"last elment:"<<v.back()<<endl;
  
}

3. Deque in sTL: 
#include <iostream>
#include <deque>
using namespace std;
int main() {
  
  deque<int> d;
  d.push_back(1);
  d.push_front(2);
  for(int i:d){
    cout<<i<<" ";
  }
  cout<<endl;
  d.pop_back();

  d.push_back(3);
  cout<<"first Index element:"<<d.at(1)<<endl;
  cout<<"element is empty or not:"<<d.empty()<<endl;
  cout<<" before erase:"<<d.size()<<endl;
  d.erase(d.begin(),d.begin()+1);
  cout<<" after erase:"<<d.size()<<endl;
 
}

4.List in STL:

#include <iostream>
#include <list>
using namespace std;

int main() {
  list<int> l;
  list<int> n(l); //copy l list to new n list(all elem of l moves to n now)
   for(int i:n){
    cout<<"element of new list:"<<i<<endl;
  }
  l.push_back(1);
  l.push_front(2);
  l.push_front(3);
  for(int i:l){
    cout<<"element of list:"<<i<<endl;
  }
  l.erase(l.begin());
  cout<<"after erase:"<<endl;
    for(int i:l){
    cout<<"element of list:"<<i<<endl;
  }
  cout<<"size of list:"<<l.size();
}

5. Stack in stl:

#include <iostream>
#include <stack>
using namespace std;
int main() {
  stack<int> s;
  s.push(1);
  s.push(2);
  cout<<s.top();
   s.pop();
  cout<<s.size();
  cout<<s.empty();
}

6. Queue in STL:
#include <iostream>
#include <queue>
using namespace std;
int main() {
  queue<string> q; //FIFO(First IN First Out)
  q.push("love");
  q.push("babar");
  q.push("Kumar");
  cout<<q.front();
  cout<<q.size();
  q.pop();
  
  
}



