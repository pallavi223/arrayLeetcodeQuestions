Input: nums = [1,3,5,6], target = 5
Output: 2

Approach 1 : Using Linear Serach
int searchInsert(vector& nums, int target) {
int ans = 0;
for(int i=0;i<nums.size();i++){
if(nums[i] < target){
ans = i+1;
}
return ans;
}


Approach 2: Using Binary Search
class Solution {
public:
int searchInsert(vector& nums, int target) {
int s = 0;
int e = nums.size()-1;

while(s<=e){
    int mid = (s+e)/2;
    if(nums[mid]==target){
        
        return mid;
    }
    else if(nums[mid]<target){
        s=mid+1;
    }
    else {
        e=mid-1;
    }
}
e++;
return e;
}
};

why use e++?
voh isliya because agar hame array mai number nhi mela toh voh actual position hoge number ki
because both s & l moving inside the array to search the number .
and at last we have to increase s || l by one because the loop ends when s<=l thats why

